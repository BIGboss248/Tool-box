# ~/.config/starship.toml

add_newline = true
command_timeout = 1000
# Modules enabled but not used $nodejs$dart$golang$status
format = """$container$os$username$battery$hostname$localip$netns$git_branch$git_status$git_state$cmd_duration$docker_context$kubernetes$cpp$c$cmake$nodejs$dart$golang$python
$shell$directory
$character"""

[cmake]
version_format = "v"
symbol = "△ "
style = "bold blue"
format = "via [$symbol($version )]($style)"
disabled = false
detect_folders = []
detect_files = ["CMakeLists.txt", "CMakeCache.txt"]
detect_extensions = []

[cpp]
version_format = "v"
symbol = "C++ "
style = "149 bold"
format = "[$symbol($version(-$name) )]($style)"
disabled = false
detect_folders = []
detect_files = []
detect_extensions = [
    "cpp",
    "cc",
    "cxx",
    "c++",
    "hpp",
    "hh",
    "hxx",
    "h++",
    "tcc",
]
commands = [
    [
        "c++",
        "--version",
    ],
    [
        "g++",
        "--version",
    ],
    [
        "clang++",
        "--version",
    ],
]

[c]
version_format = "v"
symbol = "C "
style = "149 bold"
format = "via [$symbol($version(-$name) )]($style)"
disabled = false
detect_folders = []
detect_files = []
detect_extensions = ["c", "h"]
commands = [["cc", "--version"], ["gcc", "--version"], ["clang", "--version"]]


[cmd_duration]
show_notifications = true
min_time_to_notify = 45000
show_milliseconds = true
min_time = 5000
format = "[🕒 $duration](yellow bold) "
disabled = false

[character]
success_symbol = "[└─>](bold green)"
error_symbol = "[└─>](bold red)"
disabled = false
format = "$symbol "
vimcmd_visual_symbol = "[└─>](bold yellow)"
vimcmd_symbol = "[└─>](bold green)"
vimcmd_replace_symbol = "[└─>](bold purple)"
vimcmd_replace_one_symbol = "[└─>](bold purple)"

[container]
disabled = false
symbol = "⬢"
format = '[$symbol \[$name\]]($style) '
style = "red bold dimmed"

[battery]
format = '[$symbol$percentage]($style) '
full_symbol = '🔋 '
charging_symbol = '⚡️ '

[[battery.display]]
threshold = 20
style = 'bold red'

[[battery.display]]
threshold = 50
style = 'bold yellow'

[os]
format = '[$symbol]()  '
disabled = false


# This is the default symbols table.
[os.symbols]

Debian = ""
Kali = ""
Linux = "🐧"
Ubuntu = "󰕈"
Raspbian = "🍓"
Windows = "🪟"

# ---

# Shows the username
[username]
style_user = 'white italic'
style_root = '#FFD700 italic'
format = '[$user]($style) '
disabled = false
show_always = true

# Shows the hostname
[hostname]
ssh_only = true
format = '$ssh_symbol [$hostname](bold yellow) '
ssh_symbol = '🌐'
disabled = false

# Shows current directory
[directory]
truncate_to_repo = false
truncation_length = 70
truncation_symbol = '…/'
home_symbol = '󰋜 ~'
# read_only_style = '197'
read_only = '🔒'
format = '[$path]($style)[$read_only]($read_only_style) '

[git_state]
style = "bold yellow"
revert = "REVERTING"
rebase = "REBASING"
merge = "MERGING"
format = "\\([$state( $progress_current/$progress_total)]($style)\\) "
disabled = false
cherry_pick = "CHERRY-PICKING"
bisect = "BISECTING"
am_or_rebase = "AM/REBASE"
am = "AM"


# Shows current git branch
[git_branch]
symbol = ''
format = '[$symbol $branch]($style)'
style = 'bold green'

# Shows current git status
[git_status]
format = '([ \( $all_status$ahead_behind\)]($style) )'
style = 'bold green'
conflicted = '[ confliced=${count}](red) '
up_to_date = '[󰘽 up-to-date](green) '
untracked = '[󰋗 untracked=${count}](red) '
ahead = ' ahead=${count}'
diverged = ' ahead=${ahead_count}  behind=${behind_count}'
behind = ' behind=${count}'
stashed = '[ stashed=${count}](green) '
modified = '[󰛿 modified=${count}](yellow) '
staged = '[󰐗 staged=${count}](green) '
renamed = '[󱍸 renamed=${count}](yellow) '
deleted = '[󰍶 deleted=${count}](red) '

[docker_context]
disabled = false
only_with_files = true
detect_files = ['docker-compose.yml', 'docker-compose.yaml', 'Dockerfile']
format = '[🐋 $context](blue bold)'


# Shows kubernetes context and namespace
[kubernetes]
format = '[󱃾 $context\($namespace\)](bold purple) '
disabled = false

# ---

[package]
format = 'via [📦 $version](208 bold) '

[pijul_channel]
symbol = ""

[python]
symbol = ""
pyenv_version_name = true
python_binary = [["python"], ["python3"], ["python2"]]
detect_files = [
    "requirements.txt",
    ".python-version",
    "pyproject.toml",
    "Pipfile",
    "tox.ini",
    "setup.py",
    "__init__.py",
]
detect_env_vars = ["VIRTUAL_ENV"]
detect_extensions = ["py", "ipynb"]
format = "via [${symbol}${pyenv_prefix}(${version} )(\\($virtualenv\\) )]($style)"
version_format = "v${raw}"

[rlang]
symbol = "󰟔"

[ruby]
symbol = ""

[rust]
symbol = ""

[scala]
symbol = ""

[dart]
format = '[🎯$version](blue) '
detect_files = ["pubspec.yaml", "pubspec.yml", "pubspec.lock"]
disabled = false
style = "bold blue"
symbol = "🎯 "
version_format = "${raw}"

[golang]
format = 'via [$symbol($version )($mod_version )]($style)'
detect_extensions = ["go"]
detect_files = [
    "go.mod",
    "go.sum",
    "go.work",
    "glide.yaml",
    "Gopkg.yml",
    "Gopkg.lock",
    ".go-version",
]
detect_folders = ["Godeps"]
disabled = false
not_capable_style = "bold cyan"
version_format = "v${raw}"
symbol = ""

[localip]
ssh_only = false
format = '[@$localipv4](#9966ff) '
disabled = false


[netns]
disabled = false
style = 'bold yellow'
symbol = '🛜 '
format = '[$symbol$netns]($style) '

[nodejs]
format = '[$symbol $version](bold green) '
style = "bold green"
symbol = " "
detect_files = [
    "package.json",
    ".node-version",
    ".nvmrc",
    "!bunfig.toml",
    "!bun.lock",
    "!bun.lockb",
]
disabled = false
version_format = "v${raw}"

[shell]
fish_indicator = '[󰈺](#4AE8B6)'
bash_indicator = '[](#89e051)'
cmd_indicator = '(gray)'
zsh_indicator = '[](brwon)'
powershell_indicator = '[](cyan bold)'
unknown_indicator = 'mystery shell'
disabled = false
format = '$indicator '

[status]

symbol = '🔴'
success_symbol = '🟢'
sigint_symbol = "🟡"
format = '$symbol($style) '
map_symbol = true
disabled = false
