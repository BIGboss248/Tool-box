# DevSkim: ignore DS0000,DS00001
#kics-scan disable=610e266e-6c12-4bca-9925-1ed0cd29742b,ce76b7d0-9e77-464d-b86f-c5c48e03e22d,8c978947-0ff6-485c-b0c2-0bfca6026466,698ed579-b239-4f8f-a388-baa4bcb13ef8
services:
  s-ui:
    image: alireza7/s-ui
    container_name: s-ui
    hostname: "S-UI docker"
    volumes:
      - "singbox:/app/bin"
      - "./db:/app/db"
      - "./cert:/app/cert"
      - "logs:/logs"
    environment:
      SINGBOX_API: "sing-box:1080"
      SUI_DB_FOLDER: "db"
    tty: true
    restart: unless-stopped
    ports:
      # Panel path: /app/
      - "2095:2095" # Panel Port
        # Subscription path: /sub/
      - "2096:2096" # Subscription Port
    networks:
      - my_network
    links:
      - syslog
    logging:
      driver: syslog
      options:
        tag: "s-ui"
        syslog-address: "udp://127.0.0.1:1514"
    entrypoint: "./entrypoint.sh"
    depends_on:
      - syslog
    healthcheck:
      test: ["CMD", "wget --spider http://127.0.0.1:2095/app"]
      interval: 1m30s
      timeout: 30s
      retries: 5
      start_period: 30s

  sing-box:
    image: alireza7/s-ui-singbox
    container_name: sing-box
    hostname: sing-box
    volumes:
      - "singbox:/app/"
      - "./cert:/cert"
    networks:
      - my_network
    ports:
      - "443:443"
      - "1443:1443"
      - "2443:2443"
      - "3443:3443"
    restart: unless-stopped
    links:
      - syslog
    logging:
      driver: syslog
      options:
        tag: "sing-box"
        syslog-address: "udp://127.0.0.1:1514"
    depends_on:
      - s-ui
      - syslog

  syslog:
    image: rsyslog/syslog_appliance_alpine
    container_name: syslog
    hostname: syslog
    volumes:
      - "logs:/logs"
    networks:
      - my_network
    ports:
      - "127.0.0.1:1514:1514/udp"
    restart: unless-stopped
    environment:
      - RSYSLOG_CONF_GLOBAL_CONF=template(name="RemoteLogs" type="string" string="/logs/%programname%.log")
      - RSYSLOG_CONF_INPUT_UDP="input(type=\"imudp\" port=\"1514\" ruleset=\"remote\")"
      - RSYSLOG_CONF_RULESET_REMOTE="ruleset(name=\"remote\") { action(type=\"omfile\" dynaFile=\"RemoteLogs\") }"
    command: >
      sh -c 'touch /config/container_config'

networks:
  my_network:
    driver: bridge
    name: my_network
volumes:
  logs:
  singbox:
