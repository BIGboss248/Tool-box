#kics-scan disable=1c1325ff-831d-43a1-973e-839ae57dfcc0,d6355c88-1e8d-49e9-b2f2-f8a1ca12c75b
services:
  traefik:
    #* Traefik ignores starting or unhealthy containers by default
    image: traefik
    container_name: traefik
    hostname: traefik
    restart: unless-stopped
    command:
      - "--log.level=INFO"
      - "--accesslog"
      - "--ping=true"
      - "--accesslog.filepath=/var/log/traefik/access.log" # Traefik access logs required for crowdsec monitoring
      #* Create a secure password for dashboard using below commands
      #? If you see a variable not set error when placing hash in docker compose add an extera $ as escape character
      # sudo apt-get install apache2-utils
      # htpasswd -bnBC 10 "" yourpassword
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.endpoint=unix:///var/run/docker.sock"

      - "--metrics.prometheus=true"
      - "--metrics.prometheus.addEntryPointsLabels=true"
      - "--metrics.prometheus.addrouterslabels=true"
      - "--metrics.prometheus.addServicesLabels=true"
      - "--entryPoints.metrics.address=:8082"
      - "--metrics.prometheus.entryPoint=metrics"

      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"

      # This will allow traefik to read the real IP from the X-Forwarded-For header of cloudflare IPs
      # meaning even behind cloudflare proxy traefik can see clients real IP and not cloudflares server IP
      # List of cloudflare IPs:https://www.cloudflare.com/ips-v4/#
      - --entrypoints.websecure.forwardedHeaders.trustedIPs=173.245.48.0/20,103.21.244.0/22,103.22.200.0/22,103.31.4.0/22,141.101.64.0/18,108.162.192.0/18,190.93.240.0/20,188.114.96.0/20,197.234.240.0/22,198.41.128.0/17,162.158.0.0/15,104.16.0.0/13,104.24.0.0/14,172.64.0.0/13,131.0.72.0/22

      - "--certificatesResolvers.myresolver.acme.storage=acme.json"
      - "--certificatesresolvers.myresolver.acme.httpchallenge=true"
      - "--certificatesresolvers.myresolver.acme.httpchallenge.entrypoint=web"
      - "--certificatesresolvers.myresolver.acme.email=postmaster@example.com"
      - "--certificatesresolvers.myresolver.acme.storage=/letsencrypt/acme.json"

      - --certificatesresolvers.cloudflare_resolver.acme.dnschallenge.provider=cloudflare
      - --certificatesresolvers.cloudflare_resolver.acme.storage=/letsencrypt/acme.json
      - --certificatesresolvers.cloudflare_resolver.acme.dnschallenge.resolvers=1.1.1.1:53,8.8.8.8:53

      - "--experimental.plugins.bouncer.modulename=github.com/maxlerebourg/crowdsec-bouncer-traefik-plugin"
      - "--experimental.plugins.bouncer.version=v1.3.0"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
      - "./traefik_logs:/var/log/traefik"
      - /etc/localtime:/etc/localtime:ro
      - ./letsencrypt:/letsencrypt:rw
      # - ./traefik.yml:/traefik.yml:ro
      # - './ban.html:/ban.html:ro'
      # - './captcha.html:/captcha.html:ro'
      # - ./data/config.yml:/config.yml:ro
    ports:
      - 80:80
      - 443:443
      - 8080:8080
      - 8082:8082 # metrics port /metrics
    # depends_on:
    #   - crowdsec
        # condition: service_healthy
    env_file:
      - settings.env
    healthcheck:
      test: ["CMD", "traefik", "healthcheck", "--ping"]
      interval: 1m30s
      timeout: 30s
      retries: 5
      start_period: 3s
    networks:
      my_network:

  crowdsec:
    image: crowdsecurity/crowdsec
    container_name: crowdsec
    hostname: crowdsec
    restart: unless-stopped
    environment:
      COLLECTIONS: crowdsecurity/traefik crowdsecurity/appsec-virtual-patching crowdsecurity/appsec-generic-rules
      CUSTOM_HOSTNAME: crowdsec
      # We need to register one api key per service we will use
      #* sudo docker exec crowdsec cscli bouncers add crowdsecBouncer
      BOUNCER_KEY_TRAEFIK: ${crowdsec_local_api_key}
    env_file:
      - settings.env
    expose:
      - 8080
    volumes:
      - ./traefik_logs:/var/log/traefik:ro # Traefik access logs required for monitoring
      - ./crowdsec-logs:/var/log/crowdsec:ro
      - ./crowdsec-data:/var/lib/crowdsec/data
      - ./crowdsec-auth/auth.log:/var/log/auth.log:ro
      - ./acquis.yaml:/etc/crowdsec/acquis.yaml:ro
    labels:
      - "traefik.enable=false"
    healthcheck:
      test: ["CMD", "cscli", "version"]
      interval: 1m30s
      timeout: 30s
      retries: 5
      start_period: 10s
    networks:
      my_network:

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    volumes:
      - ./prometheus_config:/etc/prometheus/
      - prometheus_data:/prometheus
    ports:
      - "9090:9090"
    networks:
      my_network:
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9090/-/healthy"]
      interval: 10s
      timeout: 15s
      retries: 10
      start_period: 40s

networks:
  my_network:
    driver: bridge
    name: my_network
volumes:
  prometheus_data:
