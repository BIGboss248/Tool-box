services:
  postgres:
    image: postgres
    container_name: postgres
    hostname: postgres
    restart: always
    # ports:
    #   - :5432
    environment:
      - POSTGRES_USER=${pg_admin_sudo_user} # Default is postgres
      - POSTGRES_PASSWORD=${pg_pass}
    volumes:
      - ./DB:/var/lib/postgresql/data
    networks:
      - my_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready"]
      interval: 10s
      timeout: 5s
      retries: 5

  pg_admin:
    image: dpage/pgadmin4
    restart: always
    container_name: pa_admin
    hostname: pg_admin
    depends_on:
      - postgres
    ports:
      - :80
    environment:
      - PGADMIN_DEFAULT_EMAIL=${pg_admin_email} # Email without ""
      - PGADMIN_DEFAULT_PASSWORD=${pg_admin_pass}
    networks:
      - my_network
    healthcheck:
      test: ["CMD", "wget", "--spider", "http://localhost:80"]
      interval: 1m30s
      timeout: 30s
      retries: 5
      start_period: 30s
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.postgres.entrypoints=web"
      - "traefik.http.routers.postgres.rule=Host(`${pg_admin_domain}`)"
      - "traefik.http.routers.postgres-secure.tls=true"
      - "traefik.http.routers.postgres-secure.entrypoints=websecure"
      - "traefik.http.routers.postgres-secure.rule=Host(`${pg_admin_domain}`)"
      - "traefik.http.routers.postgres-secure.tls.certresolver=myresolver"

networks:
  my_network:
    driver: bridge
    name: my_network
